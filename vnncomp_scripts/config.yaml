name: SobolBox
ami: ami-0d70546e43a941d70
scripts_dir: vnncomp_scripts
manual_installation_step: False
run_installation_script_as_root: True
run_post_installation_script_as_root: True
run_toolkit_as_root: True
description: >
  SobolBox is a black-box falsification tool for detecting safety violations in neural networks. It accepts neural network inputs in ONNX format and safety specifications in VNNLIB format. SobolBox treats neural networks as multi-input multi-output (MIMO), differential and non-convex black boxes . The falsification algorithm assumes limited resources (e.g., no GPU acceleration) and no domain-specific knowledge (e.g., no architectural assumptions). This makes it portable and extensible to other MIMO, black-box systems.
  
  SobolBox uses Microsoft Z3 Theorem Prover to parse VNNLIB files and extract input bounds via its optimization API. Upon extracting the input bounds, it generates a sample of input points using Sobol sequence sampling. By computing the neural network outputs across these points, SobolBox identifies promising regions where global optima might be found. For each output variable, the top 1% argmin and argmax are chosen, and limited-memory boxed BFGS optimization is performed to quickly converge to local optima around those regions and refine the preliminary estimates obtained from Sobol. This ensures a tight under-approximation of the output bounds. Once these extrema estimates are obtained, they are fed into Z3 along with the safety specification for analysis.
  
  * If the analysis determines that a safety violation is not possible given the computed output bounds, the tool returns unsat. The output bounds computed by our algorithm are under-approximations. As such, unsat results are high confidence, but not sound guarantees.
  * If the analysis finds an optimum or a Sobol sequence sample that is a valid safety violation, the tool returns sat along with the counterexample.
  * If the tool encounters neural networks of effective input dimension greater than 15000, the tool quits gracefully and returns unknown.

  If the analysis is inconclusive, a second pass of Automatic Differentiation Variational Inference is run. The ADVI samples approximate a bounded posterior distribution defined over the input space, that favours regions near the computed optima set. If ADVI is able to find a valid counterexample SobolBox returns sat, unknown otherwise.
  
  SobolBox also implements caching of Sobol sequences as well as computed output bounds to reduce computational overheads over incremental runs.
